# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive   # 테마를 submodule로 쓰는 경우 필수
          fetch-depth: 0

      - name: Setup Hugo (0.148.2 extended)
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.148.2'
          extended: true

      - name: Verify Hugo
        run: hugo version

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Install Node.js dependencies (if any)
        run: |
          if [[ -f package-lock.json || -f npm-shrinkwrap.json ]]; then
            npm ci
          else
            echo "No npm lockfile — skipping npm ci"
          fi

      # Hugo Modules 사용하는 경우에 무해한 안정화 단계 (submodule만 써도 실행해도 문제 없음)
      - name: Hugo modules tidy/graph (safe to run)
        run: |
          hugo mod tidy || true
          hugo mod graph || true

      # 만약 PaperMod의 head에서 google_analytics.html partial을 찾지 못해 실패한다면
      # 아래 두 줄 주석을 해제해서 빈 partial을 만들어 일단 빌드를 통과시킬 수 있습니다.
      # - name: (Optional) Patch missing google_analytics.html partial
      #   run: |
      #     mkdir -p layouts/partials
      #     [[ -f layouts/partials/google_analytics.html ]] || touch layouts/partials/google_analytics.html

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
